@* DisableLinePragmas: true *@
@using System.Web.Mvc.Html
@using Epinova.ElasticSearch.Core.EPiServer.Extensions
@using Epinova.ElasticSearch.Core.EPiServer.Models.ViewModels
@using Epinova.ElasticSearch.Core.Models.Admin

@model TrackingViewModel

@{
    Layout = "~/Views/ElasticSearchAdmin/_ElasticSearch.cshtml";
}

@if (Model == null)
{
    return;
}

@section Styles
{
    <style>
        #tabContainer .field-actions {
            width: 120px;
            text-align: center;
        }

        .dgrid {
            max-width: 600px;
        }
    </style>
}

@{
    string localizationPath = "/epinovaelasticsearch/tracking/";
}
<div id="tabContainer">
    <div data-dojo-type="dijit/layout/TabContainer" doLayout="false">
        @foreach (TrackingLanguage lang in Model.Languages)
        {
            <div data-dojo-type="dijit/layout/ContentPane" title="@lang.LanguageName" data-dojo-props="@(lang.LanguageId == Model.CurrentLanguage ? "selected:true" : null)">
                <div class="epi-padding-small">
                    @if (lang.Indices.Count > 1)
                    {
                        <h2>@Html.TranslateWithPathRaw("index", localizationPath)</h2>
                        <div data-dojo-type="dijit/form/DropDownButton" class="epi-primary">
                            <span>@ViewBag.SelectedIndexName</span>
                            <div data-dojo-type="dijit/DropDownMenu">
                                @foreach (var index in lang.Indices)
                                {
                                    var indexName = $"{index.Key}-{lang.LanguageId}";
                                    if (indexName != ViewBag.SelectedIndex)
                                    {
                                        <div data-dojo-type="dijit/MenuItem"
                                             data-dojo-props="onClick:function(){document.location='?index=@indexName&languageId=@lang.LanguageId';}">
                                            @index.Value
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    }

                    <h2>@Html.TranslateWithPath("searches", localizationPath)</h2>
                    <div id="@(lang.LanguageId)-wordsGrid"></div>
                    <h2>@Html.TranslateWithPath("searchesnohits", localizationPath)</h2>
                    <div id="@(lang.LanguageId)-nohitsGrid"></div>

                    @using (Html.BeginForm("Clear", "ElasticTracking"))
                    {
                        <input type="hidden" name="LanguageID" value="@lang.LanguageId" />
                        <input type="hidden" name="index" value="@ViewBag.SelectedIndex" />
                        <p>&nbsp;</p>
                        <p>
                            <button data-dojo-type="dijit/form/Button"
                                    onClick="return confirm('@Html.TranslateWithPath("clearconfirm", localizationPath)');"
                                    type="submit"
                                    class="epi-primary"
                                    disabled="@(lang.Searches.Count == 0)">
                                @Html.TranslateWithPath("clear", localizationPath)
                            </button>
                        </p>
                    }
                </div>
            </div>
        }
    </div>
</div>


<script>
    function htmlDecode(input) {
        var doc = new DOMParser().parseFromString(input, "text/html");
        return doc.documentElement.textContent;
    }

    require(
        ["dojo/_base/declare", "dgrid/Grid", "dijit/form/Button", "dojo/domReady!"],
        function (declare, Grid) {
            @foreach (var lang in Model.Languages)
            {
                <text>
                new Grid({
                        "class": "epi-grid-height--300 epi-grid--with-border",
                        columns: {
                            word: "@Html.Raw(Html.TranslateWithPath("searchword", localizationPath))",
                            count: "@Html.Raw(Html.TranslateWithPath("count", localizationPath))"
                        }
                    }, "@(lang.LanguageId)-wordsGrid")
                    .renderArray([
                        @Html.Raw(String.Join(",", lang.Searches.Select(s => String.Format("{{ word: '{0}', count: {1} }}", s.Key, s.Value))))
                    ]);
                </text>
            }

            @foreach (var lang in Model.Languages)
            {
                <text>
                new Grid({
                        "class": "epi-grid-height--300 epi-grid--with-border",
                        columns: {
                            word: "@Html.Raw(Html.TranslateWithPath("searchword", localizationPath))",
                            count: "@Html.Raw(Html.TranslateWithPath("count", localizationPath))"
                        }
                    }, "@(lang.LanguageId)-nohitsGrid")
                    .renderArray([
                        @Html.Raw(String.Join(",", lang.SearchesWithoutHits.Select(s => String.Format("{{ word: '{0}', count: {1} }}", s.Key, s.Value))))
                    ]);
                </text>
            }
        });
</script>