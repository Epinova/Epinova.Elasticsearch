#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Epinova.ElasticSearch.Core.EPiServer.Extensions;
    using Epinova.ElasticSearch.Core.EPiServer.Models.ViewModels;
    using Epinova.ElasticSearch.Core.Models.Admin;
    using EPiServer;
    using EPiServer.Core;
    using EPiServer.Editor;
    using EPiServer.Security;
    using EPiServer.SpecializedProperties;
    using EPiServer.Web;
    using EPiServer.Web.Mvc.Html;
    using EPiServer.Web.Routing;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/ElasticSearchAdmin/Mapping/Index.cshtml")]
    public partial class _Views_ElasticSearchAdmin_Mapping_Index_cshtml : System.Web.Mvc.WebViewPage<MappingViewModel>
    {
        public _Views_ElasticSearchAdmin_Mapping_Index_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

WriteLiteral("\r\n");

  
    Layout = "~/Views/ElasticSearchAdmin/_ElasticSearch.cshtml";

WriteLiteral("\r\n\r\n");

 if (Model == null)
{
    return;
}

WriteLiteral("\r\n");

  
    string localizationPath = "/epinovaelasticsearch/mapping/";

WriteLiteral("\r\n\r\n\r\n    <div");

WriteLiteral(" class=\"epi-padding-small\"");

WriteLiteral(">\r\n");

        
         using (Html.BeginForm("Index", "ElasticMapping"))
        {

WriteLiteral("            <h2>");

           Write(Html.TranslateWithPathRaw("heading", localizationPath));

WriteLiteral("</h2>\r\n");

WriteLiteral("            <p>\r\n                <label>\r\n");

WriteLiteral("                    ");

               Write(Html.TranslateWithPathRaw("index", localizationPath));

WriteLiteral("\r\n                    <select");

WriteLiteral(" data-dojo-type=\"dijit/form/Select\"");

WriteLiteral(" name=\"index\"");

WriteLiteral(">\r\n");

                        
                         foreach (IndexInformation index in Model.Indices)
                        {

WriteLiteral("                            <option");

WriteAttribute("value", Tuple.Create(" value=\"", 940), Tuple.Create("\"", 960)
, Tuple.Create(Tuple.Create("", 948), Tuple.Create<System.Object, System.Int32>(index.Index
, 948), false)
);

WriteAttribute("selected", Tuple.Create(" selected=\"", 961), Tuple.Create("\"", 1029)
, Tuple.Create(Tuple.Create("", 972), Tuple.Create<System.Object, System.Int32>(Model.SelectedIndex == index.Index ? "selected" : null
, 972), false)
);

WriteLiteral(">");

                                                                                                                         Write(index.Index);

WriteLiteral("</option>\r\n");

                        }

WriteLiteral("                    </select>\r\n                </label>\r\n                <button");

WriteLiteral(" data-dojo-type=\"dijit/form/Button\"");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" class=\"epi-primary\"");

WriteLiteral(" name=\"selectedButton\"");

WriteLiteral(" value=\"show\"");

WriteLiteral(">");

                                                                                                                           Write(Html.TranslateWithPathRaw("show", localizationPath));

WriteLiteral("</button>\r\n                <button");

WriteLiteral(" data-dojo-type=\"dijit/form/Button\"");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" class=\"epi-primary\"");

WriteLiteral(" name=\"selectedButton\"");

WriteLiteral(" value=\"validate\"");

WriteLiteral(">");

                                                                                                                               Write(Html.TranslateWithPathRaw("validate", localizationPath));

WriteLiteral("</button>\r\n            </p>\r\n");

        }

WriteLiteral("\r\n");

        
         if (Model.Mappings != null)
        {

WriteLiteral("            <pre>");

            Write(Model.Mappings);

WriteLiteral("</pre>\r\n");

        }

WriteLiteral("    </div>");

        }
    }
}
#pragma warning restore 1591
